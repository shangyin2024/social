// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/batch-recent-posts": {
            "post": {
                "description": "批量获取多个平台最近发布的内容列表，支持定时后驱",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "内容"
                ],
                "summary": "批量获取最近发布的内容",
                "parameters": [
                    {
                        "description": "批量获取最近发布内容请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BatchGetRecentPostsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "获取成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.BatchGetRecentPostsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "未授权",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/recent-posts": {
            "post": {
                "description": "获取指定平台最近发布的内容列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "内容"
                ],
                "summary": "获取最近发布的内容",
                "parameters": [
                    {
                        "description": "获取最近发布内容请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GetRecentPostsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "获取成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GetRecentPostsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "未授权",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/share": {
            "post": {
                "description": "将内容分享到指定的社交媒体平台",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "分享"
                ],
                "summary": "分享内容到社交媒体平台",
                "parameters": [
                    {
                        "description": "分享请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ShareRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "分享成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.ShareResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "未授权",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/stats": {
            "post": {
                "description": "获取指定媒体内容在社交媒体平台上的统计信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "统计"
                ],
                "summary": "获取社交媒体内容统计信息",
                "parameters": [
                    {
                        "description": "统计请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.StatsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "统计信息",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.StatsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "未授权",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/callback": {
            "post": {
                "description": "前端收到第三方平台OAuth回调后，调用此接口处理授权码交换和token保存",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "认证"
                ],
                "summary": "处理OAuth回调",
                "parameters": [
                    {
                        "description": "回调请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OAuth callback completed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CallbackResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/is-authorized": {
            "post": {
                "description": "查询指定用户是否授权指定平台",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "认证"
                ],
                "summary": "查询是否授权",
                "parameters": [
                    {
                        "description": "查询是否授权请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.IsAuthorizedRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.IsAuthorizedResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "description": "客户端主动刷新指定平台的访问token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "认证"
                ],
                "summary": "手动刷新token",
                "parameters": [
                    {
                        "description": "刷新token请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token刷新成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.RefreshTokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "token不存在或刷新失败",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/start": {
            "post": {
                "description": "启动指定平台的OAuth授权流程，返回授权URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "认证"
                ],
                "summary": "开始OAuth授权流程",
                "parameters": [
                    {
                        "description": "授权请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.StartAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "授权URL生成成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.StartAuthResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/user-info": {
            "post": {
                "description": "获取指定平台用户的详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "认证"
                ],
                "summary": "获取用户信息",
                "parameters": [
                    {
                        "description": "获取用户信息请求参数",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GetUserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "获取用户信息成功",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.GetUserInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "未授权或token过期",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "检查服务健康状态，包括存储连接状态",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "系统"
                ],
                "summary": "健康检查",
                "responses": {
                    "200": {
                        "description": "健康状态",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "服务不可用",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.BatchGetRecentPostsRequest": {
            "type": "object",
            "required": [
                "platforms",
                "server_name",
                "user_id"
            ],
            "properties": {
                "end_time": {
                    "description": "结束时间戳（可选）",
                    "type": "integer",
                    "example": 1704153599
                },
                "platforms": {
                    "description": "平台列表，最多10个平台",
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "object",
                        "required": [
                            "provider"
                        ],
                        "properties": {
                            "limit": {
                                "description": "获取数量限制，默认10，最大100",
                                "type": "integer",
                                "maximum": 100,
                                "minimum": 1,
                                "example": 10
                            },
                            "provider": {
                                "description": "平台名称",
                                "type": "string",
                                "enum": [
                                    "youtube",
                                    "x",
                                    "facebook",
                                    "tiktok",
                                    "instagram"
                                ],
                                "example": "x"
                            }
                        }
                    }
                },
                "server_name": {
                    "description": "服务名称",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "start_time": {
                    "description": "开始时间戳（可选）",
                    "type": "integer",
                    "example": 1704067199
                },
                "user_id": {
                    "description": "用户ID",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.BatchGetRecentPostsResponse": {
            "type": "object",
            "properties": {
                "error_count": {
                    "description": "查询失败的平台数量",
                    "type": "integer",
                    "example": 1
                },
                "platforms": {
                    "description": "各平台的帖子列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.PlatformPosts"
                    }
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "success_count": {
                    "description": "成功查询的平台数量",
                    "type": "integer",
                    "example": 3
                },
                "total_posts": {
                    "description": "所有平台的总帖子数",
                    "type": "integer",
                    "example": 25
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.CallbackRequest": {
            "type": "object",
            "required": [
                "code",
                "provider",
                "redirect_uri",
                "server_name",
                "state",
                "user_id"
            ],
            "properties": {
                "code": {
                    "description": "授权码",
                    "type": "string",
                    "minLength": 1,
                    "example": "authorization_code"
                },
                "provider": {
                    "description": "平台名称 可选值：youtube x facebook tiktok instagram",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "redirect_uri": {
                    "description": "重定向URI",
                    "type": "string",
                    "example": "hhttps://test-pubproject.wondera.io/static/callback.html"
                },
                "server_name": {
                    "description": "服务器名称",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "state": {
                    "description": "状态参数，包含用户ID等信息",
                    "type": "string",
                    "minLength": 1,
                    "example": "encoded_state_string"
                },
                "user_id": {
                    "description": "服务内部用户ID 必填",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.CallbackResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "description": "时间戳格式",
                    "type": "integer",
                    "example": 1704067199
                },
                "message": {
                    "type": "string",
                    "example": "OAuth callback completed successfully"
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "refer_at": {
                    "description": "时间戳格式",
                    "type": "integer",
                    "example": 1704067199
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                }
            }
        },
        "types.GetRecentPostsRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "end_time": {
                    "description": "结束时间戳（可选）",
                    "type": "integer",
                    "example": 1704153599
                },
                "limit": {
                    "description": "获取数量限制，默认10，最大100",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 10
                },
                "provider": {
                    "description": "平台名称",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "description": "服务名称",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "start_time": {
                    "description": "开始时间戳（可选）",
                    "type": "integer",
                    "example": 1704067199
                },
                "user_id": {
                    "description": "用户ID",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.GetRecentPostsResponse": {
            "type": "object",
            "properties": {
                "posts": {
                    "description": "最近发布的帖子列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Post"
                    }
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "total": {
                    "description": "总数量",
                    "type": "integer",
                    "example": 10
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.GetUserInfoRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "provider": {
                    "description": "平台名称",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "description": "服务名称",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "user_id": {
                    "description": "用户ID",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                },
                "user_info": {
                    "$ref": "#/definitions/types.UserInfo"
                }
            }
        },
        "types.IsAuthorizedRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "provider": {
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "user_id": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.IsAuthorizedResponse": {
            "type": "object",
            "properties": {
                "is_authorized": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "types.PlatformPosts": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "如果该平台查询失败，记录错误信息",
                    "type": "string",
                    "example": "authentication failed"
                },
                "posts": {
                    "description": "该平台的帖子列表",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Post"
                    }
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "total": {
                    "description": "该平台的总数量",
                    "type": "integer",
                    "example": 10
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.Post": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "帖子内容",
                    "type": "string",
                    "example": "Hello World!"
                },
                "created_at": {
                    "description": "创建时间戳",
                    "type": "integer",
                    "example": 1704067199
                },
                "description": {
                    "description": "描述",
                    "type": "string",
                    "example": "Post description"
                },
                "id": {
                    "description": "帖子ID",
                    "type": "string",
                    "example": "1234567890"
                },
                "media_type": {
                    "description": "媒体类型：image, video, audio",
                    "type": "string",
                    "example": "image"
                },
                "media_url": {
                    "description": "媒体URL",
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "stats": {
                    "description": "统计信息",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StatsData"
                        }
                    ]
                },
                "title": {
                    "description": "标题（YouTube等平台）",
                    "type": "string",
                    "example": "My Post"
                },
                "updated_at": {
                    "description": "更新时间戳",
                    "type": "integer",
                    "example": 1704067199
                },
                "url": {
                    "description": "帖子链接",
                    "type": "string",
                    "example": "https://x.com/user/status/1234567890"
                }
            }
        },
        "types.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "provider": {
                    "description": "平台名称",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "description": "服务名称",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "user_id": {
                    "description": "用户ID",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "description": "新token的过期时间戳",
                    "type": "integer",
                    "example": 1704067199
                },
                "message": {
                    "type": "string",
                    "example": "Token refreshed successfully"
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "refreshed_at": {
                    "description": "刷新时间戳",
                    "type": "integer",
                    "example": 1704067199
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.ShareRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "content": {
                    "description": "text content",
                    "type": "string",
                    "maxLength": 280,
                    "example": "Hello World!"
                },
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "This is a description"
                },
                "media_url": {
                    "description": "url to media (backend should download \u0026 upload)",
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "privacy": {
                    "type": "string",
                    "enum": [
                        "public",
                        "private",
                        "unlisted",
                        "friends",
                        "followers"
                    ],
                    "example": "public"
                },
                "provider": {
                    "description": "平台名称 可选值：youtube x facebook tiktok instagram",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "description": "服务名称 必填",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "tags": {
                    "type": "array",
                    "maxItems": 10,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "hello",
                        "world"
                    ]
                },
                "title": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "My Post"
                },
                "user_id": {
                    "description": "用户ID 必填 同一服务名称下user_id唯一",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.ShareResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello from Social Platform! 🚀"
                },
                "media_id": {
                    "description": "Tweet ID or post ID for status query",
                    "type": "string",
                    "example": "1234567890"
                },
                "media_url": {
                    "type": "string",
                    "example": "https://example.com/image.jpg"
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "social",
                        "oauth",
                        "test"
                    ]
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.StartAuthRequest": {
            "type": "object",
            "required": [
                "provider",
                "redirect_uri",
                "server_name",
                "user_id"
            ],
            "properties": {
                "provider": {
                    "description": "平台名称 可选值：youtube x facebook tiktok instagram",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "redirect_uri": {
                    "type": "string",
                    "example": "https://test-pubproject.wondera.io/static/callback.html"
                },
                "server_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "user_id": {
                    "description": "用户ID 必填 同一服务名称下user_id唯一",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.StartAuthResponse": {
            "type": "object",
            "properties": {
                "auth_url": {
                    "type": "string",
                    "example": "https://x.com/i/oauth2/authorize?response_type=code\u0026client_id=..."
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.StatsData": {
            "type": "object",
            "properties": {
                "likes": {
                    "type": "integer",
                    "example": 100
                },
                "replies": {
                    "type": "integer",
                    "example": 25
                },
                "retweets": {
                    "type": "integer",
                    "example": 50
                },
                "shares": {
                    "type": "integer",
                    "example": 10
                },
                "views": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "types.StatsRequest": {
            "type": "object",
            "required": [
                "provider",
                "server_name",
                "user_id"
            ],
            "properties": {
                "media_id": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "1234567890"
                },
                "provider": {
                    "description": "平台名称 可选值：youtube x facebook tiktok instagram",
                    "type": "string",
                    "enum": [
                        "youtube",
                        "x",
                        "facebook",
                        "tiktok",
                        "instagram"
                    ],
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "example": "myapp"
                },
                "user_id": {
                    "description": "用户ID 必填 同一服务名称下user_id唯一",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "user123"
                }
            }
        },
        "types.StatsResponse": {
            "type": "object",
            "properties": {
                "media_id": {
                    "type": "string",
                    "example": "1234567890"
                },
                "provider": {
                    "type": "string",
                    "example": "x"
                },
                "server_name": {
                    "type": "string",
                    "example": "myapp"
                },
                "stats": {
                    "$ref": "#/definitions/types.StatsData"
                },
                "user_id": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "types.UserInfo": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "description": "头像URL",
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "display_name": {
                    "description": "显示名称",
                    "type": "string",
                    "example": "John Doe"
                },
                "email": {
                    "description": "邮箱（如果可用）",
                    "type": "string",
                    "example": "john@example.com"
                },
                "followers": {
                    "description": "粉丝数",
                    "type": "integer",
                    "example": 1000
                },
                "following": {
                    "description": "关注数",
                    "type": "integer",
                    "example": 500
                },
                "id": {
                    "description": "平台用户ID",
                    "type": "string",
                    "example": "1234567890"
                },
                "profile_url": {
                    "description": "个人资料URL",
                    "type": "string",
                    "example": "https://x.com/johndoe"
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "example": "johndoe"
                },
                "verified": {
                    "description": "是否认证用户",
                    "type": "boolean",
                    "example": false
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8084",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Social Media Platform API",
	Description:      "多平台社交媒体授权分享API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
